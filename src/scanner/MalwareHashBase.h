#ifndef MALWARE_HASH_BASE_H
#define MALWARE_HASH_BASE_H

#include <fstream>
#include <map>
#include <cstdint>
#include <string>
#include <optional>

#include "Hash.h"

enum class BaseError {
    Ok,
    NoSuchPath,
    NotAFile,
    NoPermissions,
    WrongExtension,
    WrongFormat
};

const std::map<BaseError, std::string_view> BASE_ERROR_MESSAGES {
    {BaseError::Ok,              "Base file is ok"},
    {BaseError::NoSuchPath,      "The specified base path does not exist"},
    {BaseError::NotAFile,        "The specified base path is not a file"},
    {BaseError::NoPermissions,   "No permissions to open the database file"},
    {BaseError::WrongExtension,  "Incorrect database file extension"},
    {BaseError::WrongFormat,     "Incorrect database format"},
};

class MalwareHashBase {
public:
    MalwareHashBase();
    explicit MalwareHashBase(const std::string& basePath);
    void setBasePath(const std::string& basePath);
    BaseError checkBaseFile() const noexcept;
    void indexBaseFileContent();
    std::optional<std::string> findHashVerdict(const std::string &hash);
    std::optional<std::string> findHashVerdict(const Hash hash);
private:
    bool checkLineFormat(std::string_view line) const;
    std::pair<Hash, std::string> getHashAndVerdictFromString(const std::string &s) const;
    void openBaseAndSkipToUnread();
    std::optional<std::string> findIndexedHashVerdict(const Hash &hash) const;
private:
    // а что если хэши повторяются?
    std::map<Hash, std::string> m_hashToVerdict; //!< пары хэш-вердикт
    // а что если хэши повторяются?
    std::string   m_basePath;                   //!< путь к файлу базы
    std::ifstream m_baseFile;                   //!< файл базы
    uint64_t      m_linesRead = 0;              //!< прочитано строк из файла
    bool          m_fileIndexSucceeded = false; //!< файл прочитался полностью
};

#endif // MALWARE_HASH_BASE_H
